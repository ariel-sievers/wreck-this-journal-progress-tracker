class PagesService{static pages;constructor(){"undefined"===localStorage.getItem("pages")?this.pages=new Map:this.pages=new Map(JSON.parse(localStorage.getItem("pages")))}removePage(pageNumber){const found=this.pages.delete(pageNumber);return this.updatePages(),found}addPage(page){this.pages.set(page.pageNumber,page),this.updatePages()}hasPage(pageNumber){return this.pages.has(pageNumber)}getPage(pageNumber){return this.pages.get(pageNumber)}getPages(){return this.pages}resetPages(){this.pages.clear(),this.updatePages()}updatePages(){localStorage.setItem("pages",JSON.stringify([...this.getPages()]))}favoritePage(page){page.favorited=!page.favorited,this.addPage(page),this.updatePages()}addIdea(page,idea){page.ideas.push(idea),this.addPage(page),this.updatePages()}removeIdea(page,index){console.log(page.ideas),page.ideas=page.ideas.filter((idea,i)=>i!==index),this.addPage(page),this.updatePages()}getIdea(page,index){return page.ideas[index]}resetIdeas(page){page.ideas=[],this.addPage(page),this.updatePages()}paginate(itemsPerPage,p){const list=document.getElementById("list");list.innerHTML="";const start=itemsPerPage*--p,end=start+itemsPerPage;let counter=0;if(end!==this.pages.size)for(let i=start;i<end;i++){const page=this.getPage(i+1);list.innerHTML+=`<div class="checkbox"><label><input type="checkbox">&nbsp; Page ${i+1}<span>: ${page.title}</span></label>\n                    <i class="fas fa-star"></i>\n                    <i class="fas fa-file-alt" onclick="seeDetails(${i+1})"></i></div>`,page.favorited&&list.querySelectorAll(".fa-star")[counter].classList.add("favorite"),counter++}else{for(let i=start;i<end-1;i++){const page=this.getPage(i+1);list.innerHTML+=`<div class="checkbox"><label><input type="checkbox">&nbsp; Page ${i+1}<span>: ${page.title}</span></label>\n                    <i class="fas fa-star"></i>\n                    <i class="fas fa-file-alt" onclick="seeDetails(${i+1})"></i></div>`,page.favorited&&list.querySelectorAll(".fa-star")[counter].classList.add("favorite"),counter++}list.innerHTML+=`<div class="checkbox"><label><input type="checkbox">&nbsp; Back Cover</label>\n                <i class="fas fa-star"></i><i class="fas fa-file-alt" onclick="seeDetails(${end})"></i></div>`,this.getPage(end).favorited&&list.querySelectorAll(".fa-star")[end-1].classList.add("favorite")}}paginateAfterFilter(itemsPerPage,p){const list=document.getElementById("list"),elements=document.querySelectorAll(".checkbox");if(list.innerHTML="",p--,!elements.length)return;const start=itemsPerPage*p,end=start+itemsPerPage;for(let i=start;i<end&&elements[i];i++)list.appendChild(elements[i])}displayPaginator(itemsPerPage,p=1,size=this.getPages().size){const paginator=document.getElementById("paginator"),pages=size/itemsPerPage;paginator.innerHTML="",paginator.innerHTML+=`<button type="button" onclick="new PagesService().cursorToPrev(${p})"><i class="fa fa-long-arrow-alt-left"></i> prev</button>`;for(let i=1;i<=pages;i++)paginator.innerHTML+=i===p?`<button type="button" class="paginator-selected" onclick="new PagesService().jumpTo(${i})">${i}</button>`:`<button type="button" onclick="new PagesService().jumpTo(${i})">${i}</button>`;paginator.innerHTML+=`<button type="button" onclick="new PagesService().cursorToNext(${p})">next <i class="fa fa-long-arrow-alt-right"></i></button>`}jumpTo(p){const paginatorButtons=document.querySelectorAll("#paginator button"),currSelected=document.querySelector("#paginator button.paginator-selected");if((p=parseInt(p))>=1&&p<=paginatorButtons.length-2){this.updatePaginatorButtonListeners(paginatorButtons,p),currSelected.classList.remove("paginator-selected"),paginatorButtons[p].classList.add("paginator-selected");const filterValue=document.querySelector("select").value;if("none"===filterValue)this.paginate(12,p);else{let itemsPerPage=document.querySelectorAll(".checkbox").length;filter(null,filterValue),this.paginateAfterFilter(itemsPerPage,p)}}else p<1?this.jumpTo(paginatorButtons.length-2):this.jumpTo(1)}cursorToPrev(p){this.jumpTo(--p)}cursorToNext(p){this.jumpTo(++p)}updatePaginatorButtonListeners(paginatorButtons,p){paginatorButtons[0].setAttribute("onclick",`new PagesService().cursorToPrev(${p})`),paginatorButtons[paginatorButtons.length-1].setAttribute("onclick",`new PagesService().cursorToNext(${p})`)}}